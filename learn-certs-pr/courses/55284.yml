### YamlMime:Course
title: Introduction to Python
metadata:
  title: 'Course 55284-A: Introduction to Python'
  description: 'Course 55284-A: Introduction to Python'
uid: course.55284
courseNumber: '55284-A'
hoursToComplete: 96
iconUrl: /media/learn/certification/course.svg
skillsGained:
- skill: Понимать, как работает Python и для чего он хорош.
- skill: Понимать место Python в мире языков программирования.
- skill: Работать со строками и управлять строками с помощью Python.
- skill: Выполнять математические операции с помощью Python.
- skill: 'Работать с последовательностями Python: списками, массивами, словарями и наборами.'
- skill: Собирать результаты пользовательского ввода и вывода.
- skill: Выполнять обработку управления потоком с помощью Python.
- skill: Выполнять запись и чтение из файлов с использованием Python.
- skill: Писать функции с помощью Python.
- skill: Обрабатывать исключения с помощью Python.
- skill: Работать с датами и временем с помощью Python.
learningPartnersLink: /learn/certifications/partners
locales:
- en
levels:
- beginner
roles:
- developer
summary: |-
  На этом 4-дневном обучающем курсе Python учащиеся научатся программировать на Python. Курс предназначен для учащихся, которые только начинают знакомиться с этим языком, с опытом и без опыта работы с другими языками программирования.
  Этот курс по Python преподается с использованием Python 3, но отличия между Python 2 и Python 3 отмечаются. На индивидуальных занятиях по Python при необходимости инструктор может сфокусироваться на Python 2.

  #### Профиль аудитории
  Этот курс предназначен для учащихся, желающих изучить Python. Опыт в программировании будет полезен, но не является обязательным условием.
prerequisitesSection: |-
  Опыт в программировании будет полезен, но не является обязательным условием.
outlineSection: |-
  ### Модуль 1&#58; основы Python
  Python, появившийся в 1991 году, является одним из самых популярных используемых языков программирования. Python — это высокоуровневый язык программирования, что означает, что он использует синтаксис, относительно понятный человеку, который переводится интерпретатором Python на язык, понятный компьютеру. Примерами других популярных высокоуровневых языков программирования являются C#, Objective-C, Java, PHP и JavaScript. Интересно, что все перечисленные языки, кроме Python, используют C-подобный синтаксис. Если вы используете один или несколько из таких языков, синтаксис Python может показаться вам немного странным. Но со временем вы привыкните. И поймете, что он довольно удобен в использовании.

  #### Уроки
  - Запуск Python
  - Здравствуй, мир!
  - Литералы
  - Комментарии в Python
  - Переменные
  - Написание модуля Python
  - Функция print()
  - Сбор пользовательского ввода
  - Получение помощи


  #### Лабораторная работа &#58; упражнения в этом уроке
  - Здравствуй, мир
  - Изучение типов
  - Простой скрипт на Python

  После прохождения этого модуля учащиеся будут/смогут&#58;
  - Понимать, как работает Python.
  - Понимать место Python в мире языков программирования.
  - Понимать разницу между Python 3.x и Python 2.x.
  - Понимать переменные и типы данных в Python.
  - Создавать простые модули.
  - Получать помощь в отношении Python.


  ### Модуль 2&#58; функции и модули
  В этом модуле объясняется, как работать с функциями и модулями.
  #### Уроки
  - Определение функций
  - Область переменной
  - Глобальные переменные
  - Параметры функции
  - Возврат значений
  - Импорт модулей


  #### Лабораторная работа &#58; упражнения в этом уроке
  - Функция с параметрами
  - Параметры со значениями по умолчанию

  После прохождения этого модуля учащиеся будут/смогут&#58;
  - Определять и вызывать функции.
  - Определять параметры в передаче аргументов функциям.
  - Устанавливать значения по умолчанию для параметров.
  - Понимать область переменной.
  - Возвращать значения функций.
  - Создавать и импортировать модули.


  ### Модуль 3&#58; математические функции
  Python включает некоторые встроенные математические функции и некоторые дополнительные встроенные библиотеки, обеспечивающие расширенные математические (и связанные с ними) функции. В этом уроке мы рассмотрим встроенные функции, математические функции и некоторые библиотеки.

  #### Уроки
  - Арифметические операторы
  - Операторы назначения
  - Встроенные функции
  - Модуль математических функций
  - Модуль случайных чисел


  #### Лабораторная работа &#58; упражнения в этом уроке
  - Нижний предел и модуль
  - Сколько пицц нам нужно

  После прохождения этого модуля учащиеся смогут&#58;
  - Выполнять базовые математические операции с помощью Python.
  - Использовать математический модуль для дополнительных математических операций.
  - Использовать модуль случайных чисел для генерации случайных чисел.


  ### Модуль 4&#58; строки Python
  Python включает некоторые встроенные математические функции и некоторые дополнительные встроенные библиотеки, обеспечивающие расширенные математические (и связанные с ними) функции. В этом уроке мы рассмотрим встроенные функции, математические функции и некоторые библиотеки.

  #### Уроки
  - Кавычки и специальные символы
  - Индексация строк
  - Срез строк
  - Объединение и повторение
  - Распространенные строковые методы
  - Форматирование строк
  - Форматированные строковые литералы (f-строки)
  - Встроенные строковые функции


  #### Лабораторная работа &#58; упражнения в этом уроке
  - Индексация строк
  - Срез строк
  - Повторение
  - Изучение форматирования
  - Знакомство с f-строками
  - Вывод текста, разделенного табуляциями

  После прохождения этого модуля учащиеся смогут&#58;
  - Работать со строками.
  - Отменять специальные символы
  - Работать с многострочными литералами.
  - Индексировать и срезать строки.
  - Использовать распространенные строковые операторы и методы.
  - Форматировать строки.
  - Использовать встроенные строковые функции.


  ### Модуль 5&#58; итерируемые элементы&#58; последовательности, словари и наборы
  Итерируемые элементы — это объекты, которые могут возвращать свои члены по одному за раз. В этом уроке мы рассмотрим следующие итерируемые элементы&#58; списки, кортежи, диапазоны, словари и наборы.

  #### Уроки
  - Определения
  - Последовательности
  - Распаковка последовательностей
  - Словари
  - Функция len()
  - Наборы
  - *args и **kwargs


  #### Лабораторная работа &#58; упражнения в этом уроке
  - Удаление и возврат случайного элемента
  - Простая игра «Камень, ножницы, бумага»
  - Срез последовательностей
  - Создание словаря из пользовательского вода

  После прохождения этого модуля учащиеся смогут/будут&#58;
  - Понимать различные типы итерируемых элементов, доступных в Python.
  - Создавать и изменять списки, работать с ними.
  - Создавать кортежи и работать с ними.
  - Создавать диапазоны.
  - Создавать и изменять словари, работать с ними.
  - Создавать наборы и использовать их для удаления дубликатов из списков.
  - Понимать параметры *args и **kwargs.


  ### Модуль 6&#58; управление ходом выполнения
  Обычно программа выполняется строка за строкой в заданном порядке. Мы уже видели, что мы можем менять такой ход выполнения с помощью вызова функций. Ход выполнения также можно изменить с помощью условных выражений и циклов.

  #### Уроки
  - Условные выражения
  - Циклы в Python
  - Операторы прерывания и продолжения
  - Функция enumerate()
  - Генераторы
  - Списковые включения


  #### Лабораторная работа &#58; упражнения в этом уроке
  - Все истинные или любой истинный
  - Игра на отгадывание слов
  - Найти иглу
  - Бросание костей

  После прохождения этого модуля учащиеся смогут&#58;
  - Работать с условием «если» в Python.
  - Работать с циклами в Python.
  - Создавать функции генерации.
  - Работать со списковыми включениями.


  ### Модуль 7&#58; виртуальные среды
  Виртуальная среда — это контейнер для платформы разработки Python на вашем компьютере. Пакеты могут быть установлены в виртуальной среде, отдельной от вашей обычной, или не виртуальной, среды.

  #### Уроки
  - Виртуальная среда


  #### Лабораторная работа &#58; упражнения в этом уроке
  - Работа с виртуальной средой

  После прохождения этого модуля учащиеся смогут/будут&#58;
  - Понимать, что такое виртуальная среда.
  - Создать виртуальную среду.
  - Активировать и деактивировать виртуальную среду.
  - Удалить виртуальную среду.


  ### Модуль 8&#58; регулярные выражения
  Регулярные выражения используются для выполнения сопоставления шаблонов во многих языках программирования, включая Java, PHP, JavaScript, C, C++ и Perl. Мы предоставим краткий обзор регулярных выражений, а затем покажем, как работать с ними в Python.

  #### Уроки
  - Синтаксис регулярных выражений
  - Обработка регулярных выражений с помощью Python

  После прохождения этого модуля учащиеся смогут&#58;
  - Создавать регулярные выражения для сопоставления шаблонов.
  - Использовать регулярные выражения в Python.


  ### Модуль 9&#58; Юникод и кодирование
  В этом модуле объясняется, как работать с Юникодом и кодированием.
  #### Уроки
  - Биты и байты
  - Шестнадцатеричные числа
  - Кодирование


  #### Лабораторная работа &#58; упражнения в этом уроке
  - Конвертация чисел из одной системы чисел в другую
  - Нахождение ведущих к путанице элементов

  После прохождения этого модуля учащиеся смогут/будут&#58;
  - Понимать двоичные и шестнадцатеричные числа.
  - Конвертировать числа из одной системы чисел в другую.


  ### Модуль 10&#58; обработка файлов
  Python позволяет получать доступ к файлам и изменять файлы и папки операционной системы.

  Среди прочего, вы можете&#58;
  1. Открывать новые и существующие файлы и сохранять их в переменных объектов файлов.
  2. Читать содержимое файлов, всё сразу или строку за строкой.
  3. Добавлять к содержимому файлов.
  4. Переписывать содержимое файлов.
  5. Перечислять содержимое папки.
  6. Переименовывать файлы и папки.

  #### Уроки
  - Открытие файлов
  - Модули os и os.path


  #### Лабораторная работа &#58; упражнения в этом уроке
  - Нахождение текста в файле
  - Запись в файлы
  - Создатель списков

  После прохождения этого модуля учащиеся смогут&#58;
  - Читать файлы операционной системы.
  - Создавать файлы и записывать в файлы операционной системы.
  - Получать доступ к папкам и работать с папками операционной системы.
  - Работать с модулями os и os.path.


  ### Модуль 11&#58; Обработка исключений
  В этом модуле объясняется, как обрабатывать исключения в Python.
  #### Уроки
  - Условия для исключения подстановочных знаков
  - Получение информации по исключениям
  - Условие else
  - Условие finally
  - Использование исключений для управления ходом выполнения
  - Вызов собственных исключений
  - Иерархия исключений


  #### Лабораторная работа &#58; упражнения в этом уроке
  - Вызов исключений
  - Сумма с накоплением

  После прохождения этого модуля учащиеся смогут&#58;
  - Обрабатывать исключения с помощью Python.


  ### Модуль 12&#58; даты и время в Python
  В этом модуле объясняется, как работать с датами и временем с помощью Python.
  #### Уроки
  - Понимание времени
  - Модуль времени
  - Модуль даты и времени


  #### Лабораторная работа &#58; упражнения в этом уроке
  - Отчет о времени отправлений «Амтрак»

  После прохождения этого модуля учащиеся смогут&#58;
  - Работать с модулем времени
  - Работать с модулем даты и времени


  ### Модуль 13&#58; запуск скриптов Python из командной строки
  В этом модуле объясняется, как запускать скрипты Python из командной строки.
  #### Уроки
  - sys.arg
  - sys.path


  #### Лабораторная работа &#58; упражнения в этом уроке
  - Миграция настроек с использованием Windows Easy Transfer
  - Настройка эталонного образца Windows 7
  - Настройка эталонного образца

  После прохождения этого модуля учащиеся смогут&#58;
  - Запускать скрипты Python из командной строки.

  #### Дополнительные материалы
  Нет