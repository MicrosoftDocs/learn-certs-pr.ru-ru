### YamlMime:Course
title: Developing SQL Databases
metadata:
  title: 'Course 20762-C: Developing SQL Databases'
  description: 'Course 20762-C: Developing SQL Databases'
uid: course.20762
courseNumber: '20762-C'
hoursToComplete: 120
iconUrl: /media/learn/certification/course.svg
skillsGained:
- skill: Разработка и внедрение таблиц.
- skill: Описание дизайнов продвинутого стола
- skill: Обеспечение целостности данных с помощью ограничений.
- skill: Описание индексов, включая индексы Optimized и Columnstore.
- skill: Разработка и внедрение представлений.
- skill: Разработка и внедрение хранимых процедур.
- skill: Разработка и внедрение пользовательских функций.
- skill: Реагирование на манипулирование данными с помощью триггеров.
- skill: Разработка и внедрение таблиц в памяти.
- skill: Реализация управляемого кода в SQL Server.
- skill: Хранение и запрос данных XML.
- skill: Работа с пространственными данными.
- skill: Хранение и запрос объектов BLOB и текстовых документов.
learningPartnersLink: /learn/certifications/partners
locales:
- en
levels:
- advanced
roles:
- database-administrator
products:
- sql-server
exams:
- uid: exam.70-762
summary: |-
  Этот пятидневный курс под руководством инструктора дает студентам знания и навыки для разработки базы данных Microsoft SQL Server. Курс направлен на обучение использованию функций и инструментов продукта SQL Server, связанных с разработкой базы данных.

  #### Профиль аудитории
  Основная аудитория этого курса - ИТ-специалисты, которые хотят освоить функции и технологии SQL Server для реализации базы данных. 

  Дополнительной аудиторией этого курса являются разработчики на других платформах, которые хотят освоить реализацию базы данных SQL Server.
prerequisitesSection: "- Базовые знания об операционной системе Microsoft Windows и ее основных функциях.\n- практические навыки работы с Transact-SQL. \n- Практические навыки работы с реляционными базами данных."
outlineSection: |-
  ### Модуль 1&#58; Введение в разработку баз данных
  Прежде чем начать работу с Microsoft SQL Server в роли разработчика или администратора, важно понять область действия платформы SQL Server. В частности, полезно понимать, что SQL Server - это не просто механизм базы данных, а полная платформа для управления корпоративными данными.

  SQL Server обеспечивает надежную платформу данных для организаций любого размера, в дополнение к всеобъемлющему набору инструментов, которые упрощают разработку и делают ее более надежной.
  #### Уроки
  - Введение в платформу SQL Server
  - Задачи разработки баз данных SQL Server

  После завершения этого модуля вы сможете&#58; 
  - Описывать платформу SQL Server. 
  - Использовать административные инструменты SQL Server.


  ### Модуль 2&#58; Разработка и внедрение таблиц
  В системе управления реляционными базами данных (RDBMS) пользовательские и системные данные хранятся в таблицах. Каждая таблица состоит из набора строк, которые описывают объекты, и набора столбцов, которые содержат атрибуты объекта. Например, таблица Customer может иметь столбцы, такие как CustomerName и CreditLimit, и строку для каждого клиента. В Microsoft SQL Server таблицы программного обеспечения для управления данными содержатся в схемах, которые по своей концепции очень похожи на папки с файлами в операционной системе. Разработка таблиц является одной из наиболее важных задач, которые выполняет разработчик базы данных, потому что неправильный дизайн таблиц приводит к невозможности эффективного запроса данных.

  После создания соответствующего проекта важно знать, как его правильно реализовать.
  #### Уроки
  - Разработка таблиц
  - Типы данных
  - Работа со схемами
  - Создание и изменение таблиц


  #### Лабораторная работа &#58; Разработка и внедрение таблиц
  - Разработка таблиц
  - Создание схем
  - Создание таблиц

  После завершения этого модуля вы сможете&#58; 
  - Разрабатывать таблицы с использованием нормализации, первичных и внешних ключей.
  - Работать с идентификационными столбцами.
  - Понимать встроенные и пользовательские типы данных.
  - Использовать схемы в вашей базе данных для организации данных и управления безопасностью объектов.
  - Работать с вычисляемыми столбцами и временными таблицами.


  ### Модуль 3&#58; Разработка расширенных таблиц
  Физический дизайн базы данных может оказать существенное влияние на способность базы данных соответствовать требованиям к хранению и производительности, установленным заинтересованными сторонами. Разработка физической реализации базы данных включает планирование групп файлов, использование секционирования для управления большими таблицами и использование сжатия для улучшения хранения и производительности. Временные таблицы - это новая функция в SQL Server, предлагающая простое решение для сбора изменений в ваших данных.
  #### Уроки
  - Разделение данных
  - Сжатие данных
  - Временные таблицы


  #### Лабораторная работа &#58; Использование дизайнов расширенных таблиц
  - Разделение данных
  - Сжатие данных

  После завершения этого модуля вы сможете&#58; 
  - Описать принципы использования многораздельных таблиц в базе данных SQL Server.
  - Планировать использование сжатия данных в базе данных SQL Server.
  - Использовать временные таблицы для хранения и запроса изменений ваших данных.


  ### Модуль 4&#58; Обеспечение целостности данных через ограничения
  Качество данных в вашей базе данных во многом определяет полезность и эффективность приложений, которые на них полагаются - от этого может зависеть успех или неудача организации или предприятия. Обеспечение целостности данных является важным шагом в поддержании высокого качества данных.

  Вы должны обеспечить целостность данных на всех уровнях приложения от первого ввода или сбора до хранения. Программное обеспечение для управления данными Microsoft SQL Server предоставляет ряд функций, упрощающих эту работу.
  #### Уроки
  - Обеспечение целостности данных
  - Реализация целостности предметной области
  - Реализация объекта и ссылочной целостности


  #### Лабораторная работа &#58; Использование целостности данных через ограничения
  - Добавление ограничений
  - Проверка ограничений

  После завершения этого модуля вы сможете&#58; 
  - Описать варианты обеспечения целостности данных и уровни, на которых они должны применяться.
  - Реализовать целостность домена с помощью таких параметров, как проверка, уникальность и ограничения по умолчанию.
  - Реализовать ссылочную целостность через ограничения первичного и внешнего ключей.


  ### Модуль 5&#58; Введение в индексы
  Индекс представляет собой набор страниц, связанных с таблицей. Индексы используются для повышения производительности запросов или обеспечения уникальности. Прежде чем научиться реализовывать индексы, полезно понять, как они работают, насколько эффективны различные типы данных при их использовании в индексах и как можно построить индексы из нескольких столбцов. В этом модуле рассматриваются структуры таблиц, которые не имеют индексов, а также различные типы индексов, доступные в Microsoft SQL Server.
  #### Уроки
  - Основные понятия индексации
  - Типы данных и индексы
  - Кучи, кластерные и некластеризованные индексы
  - Одиночные столбцы и составные индексы


  #### Лабораторная работа &#58; Внедрение индексов
  - Создание кучи
  - Создание кластерного индекса
  - Создание покрытого индекса

  После завершения этого модуля вы сможете&#58; 
  - Объяснить основные понятия индексации.
  - Оценить, какой индекс использовать для разных типов данных.
  - Описать разницу между одиночными и составными индексами столбцов.


  ### Модуль 6&#58; Разработка оптимизированных индексных стратегий
  Индексы играют важную роль, позволяя SQL Server быстро и эффективно извлекать данные из базы. В этом модуле обсуждаются расширенные темы индексов, в том числе охватывающие индексы, предложение INCLUDE, подсказки запросов, коэффициент заполнения и наполнения, статистика, использование DMO, помощник по настройке базы данных и хранилище запросов.
  #### Уроки
  - Индексные стратегии
  - Управление индексами
  - Планы выполнения
  - Советник по настройке ядра базы данных
  - Магазин запросов Query Store


  #### Лабораторная работа &#58; Оптимизация индексов
  - Использование Query Store
  - Кучи и кластерные индексы
  - Создание покрытого индекса

  После завершения этого модуля вы сможете&#58; 
  - Описать, что такое индекс покрытия и когда его использовать.
  - Описать проблемы, связанные с управлением индексами.
  - Описать актуальные и оценочные планы выполнения.
  - Описать, как использовать Database Tuning Advisor для повышения производительности запросов.
  - Описать, как использовать Query Store для улучшения производительности запросов.


  ### Модуль 7&#58; Индексы Columnstore
  Индексы columnstore, введенные в Microsoft SQL Server 2012 используются во многих организациях в решениях для больших хранилищ данных. Этот модуль подчеркивает преимущества использования этих индексов в больших наборах данных, улучшения, внесенные в индексы columnstore в SQL Server 2016, и соображения, необходимые для эффективного использования индексов columnstore в ваших решениях.

  #### Уроки
  - Введение в индексы Columnstore
  - Создание индексов Columnstore
  - Работа с индексами Columnstore


  #### Лабораторная работа &#58; Использование индексов Columnstore
  - Создание индекса Columnstore
  - Создать оптимизированную для памяти таблицу Columnstore

  После завершения этого модуля вы сможете&#58; 
  - Описать индексы columnstore и определить подходящие сценарии для их использования.
  - Создавать кластерные и некластеризованные индексы хранилища столбцов.
  - Описать соображения по использованию индексов columnstore.


  ### Модуль 8&#58; Проектирование и внедрение представлений
  Этот модуль описывает дизайн и реализацию представлений. Представление - это особый тип запроса, который хранится и может использоваться в других запросах, как таблица. В случае с представлением, на диске хранится только определение запроса, а не набор результатов. Единственным исключением из этого являются индексированные представления, когда набор результатов также сохраняется на диске, как в случае с таблицей.

  Представления упрощают проектирование базы данных, обеспечивая уровень абстракции и скрывая сложность объединений таблиц. Представления также являются способом защиты ваших данных, предоставляя пользователям разрешения на использование представления, не предоставляя им разрешения для базовых объектов. Это означает, что данные могут храниться в частном порядке и могут быть просмотрены только надлежащими пользователями.
  #### Уроки
  - Введение в представления
  - Создание и управление представлениями
  - Особенности производительности представлений


  #### Лабораторная работа &#58; Проектирование и внедрение представлений
  - Создание стандартных представлений
  - Создание обновляемого представления

  После завершения этого модуля вы сможете&#58; 
  - Понять роль представлений в дизайне базы данных.
  - Создавать представления и управлять ими.
  - Понять особенности производительности в случае использования представлений.


  ### Модуль 9&#58; Разработка и внедрение хранимых процедур
  Этот модуль описывает разработку и внедрение хранимых процедур.
  #### Уроки
  - Введение в хранимые процедуры
  - Работа с хранимыми процедурами
  - Внедрение параметризованных хранимых процедур
  - Контроль контекста исполнения


  #### Лабораторная работа &#58; Разработка и внедрение хранимых процедур
  - Создание хранимых процедур
  - Создание параметризованных хранимых процедур
  - Изменение контекста выполнения хранимой процедуры

  После завершения этого модуля вы сможете&#58; 
  - Понять, что такое хранимые процедуры и какие у них есть преимущества.
  - Проектировать, создавать и изменять хранимые процедуры.
  - Контролировать контекст выполнения хранимых процедур.
  - Внедрить хранимые процедуры, использующие параметры.


  ### Модуль 10&#58; Разработка и внедрение пользовательских функций
  Функции - это процедуры, которые вы используете для инкапсуляции часто выполняемой логики. Вместо того, чтобы повторять логику функции во многих местах, код может вызывать функцию. Это делает код более легким в обслуживании и облегчает отладку.

  В этом модуле вы научитесь проектировать и реализовывать пользовательские функции (UDF), которые обеспечивают соблюдение бизнес-правил или согласованность данных. Вы также узнаете, как изменять и поддерживать существующие функции.
  #### Уроки
  - Обзор функций
  - Разработка и внедрение скалярных функций
  - Разработка и внедрение табличных функций
  - Рекомендации по реализации функций
  - Альтернативы функциям


  #### Лабораторная работа &#58; Разработка и внедрение пользовательских функций
  - Форматирование телефонных номеров
  - Изменение существующих функций

  После завершения этого модуля вы сможете&#58; 
  - Описать различные типы функций.
  - Разрабатывать и внедрять скалярные функции.
  - Разрабатывать и внедрять табличные функции (TVF).
  - Описать соображения по реализации функций.
  - Описать альтернативы функциям.


  ### Модуль 11&#58; Ответ на манипулирование данными с помощью триггеров
  Триггеры Data Manipulation Language (DML) - это мощные инструменты, которые можно использовать для обеспечения целостности домена, сущности, ссылочных данных и бизнес-логики. Обеспечение целостности помогает вам создавать надежные приложения. В этом модуле вы узнаете, что такое триггеры DML, как они обеспечивают целостность данных, различные типы триггеров, доступные вам, и как их определять в вашей базе данных.


  #### Уроки
  - Разработка триггеров DML
  - Внедрение триггеров DML
  - Расширенные концепции триггеров


  #### Лабораторная работа &#58; Реакция на манипулирование данными с помощью триггеров
  - Создание и тестирования триггера аудита
  - Улучшение триггера аудита

  После завершения этого модуля вы сможете&#58; 
  - Разрабатывать триггеры DML
  - Внедрять триггеры DML
  - Объяснить расширенные концепции триггеров DML, такие как вложенность и рекурсия.


  ### Модуль 12&#58; Использование таблиц в памяти
  Программное обеспечение для управления данными Microsoft SQL Server 2014 предоставило функциональные возможности оперативной обработки транзакций в памяти (OLTP) для повышения производительности рабочих нагрузок OLTP. SQL Server добавляет несколько улучшений, таких как возможность изменять оптимизированную память таблицы без ее повторного создания. Оптимизированные для памяти таблицы в основном хранятся в памяти, что обеспечивает повышенную производительность за счет уменьшения необходимости доступа к жесткому диску.

  Собственно скомпилированные хранимые процедуры еще больше повышают производительность по сравнению с традиционным интерпретируемым Transact-SQL.
  #### Уроки
  - Оптимизированные для памяти таблицы
  - Изначально скомпилированные хранимые процедуры

  
  #### Лабораторная работа &#58; Использование возможностей базы данных в памяти
  - Использование оптимизированных для памяти таблиц
  - Использование изначально скомпилированных хранимых процедур

  После завершения этого модуля вы сможете&#58;
  - Использовать оптимизированные для памяти таблицы для повышения производительности рабочих нагрузок с привязкой к защелкам.
  - Использовать изначально скомпилированные хранимые процедуры.


  ### Модуль 13&#58; Реализация управляемого кода в SQL Server
  Как специалисту по SQL Server, вам, скорее всего, будет предложено создать базы данных, отвечающие потребностям бизнеса. Большинство требований можно удовлетворить с помощью Transact-SQL. Однако иногда вам могут понадобиться дополнительные возможности, которые могут быть реализованы только с помощью общеязыкового кода среды выполнения (CLR).

  Поскольку с каждым новым выпуском в SQL Server добавляются новые функции, необходимость использования управляемого кода уменьшается. Однако бывают случаи, когда вам может потребоваться создать агрегаты, хранимые процедуры, триггеры, пользовательские функции или пользовательские типы. Вы можете использовать любой язык .NET Framework для разработки этих объектов.

  В этом модуле вы узнаете, как использовать управляемый код CLR для создания пользовательских объектов базы данных для SQL Server.
  #### Уроки
  - Введение в интеграцию CLR в SQL Server
  - Внедрение и публикация сборок CLR


  #### Лабораторная работа &#58; Реализация управляемого кода в SQL Server
  - Оценка предлагаемого кода CLR
  - Создание скалярной функции CLR
  - Создание табличной функции CLR

  После завершения этого модуля вы сможете&#58; 
  - Объяснить важность интеграции CLR в SQL Server. 
  - Внедрить и опубликовать сборок CLR с использованием средств данных SQL Server (SSDT).


  ### Модуль 14&#58; Хранение и запрос данных XML в SQL Server
  XML предоставляет правила для кодирования документов в машиночитаемой форме. Он стал широко распространенным стандартом для представления структур данных, а не для отправки неструктурированных документов. Серверы, на которых запущено программное обеспечение для управления данными Microsoft SQL Server, часто должны использовать XML для обмена данными с другими системами, и многие инструменты SQL Server предоставляют интерфейс на основе XML.
  SQL Server предлагает расширенную обработку XML как для хранения, так и для запросов. Этот модуль знакомит с XML, показывает, как хранить данные XML в SQL Server, и показывает, как запрашивать данные XML.
  Возможность запроса данных XML напрямую устраняет необходимость извлечения данных в реляционный формат перед выполнением запросов на языке структурированных запросов (SQL). Чтобы эффективно обрабатывать XML, вам нужно иметь возможность запрашивать данные XML несколькими способами; возврат существующих реляционных данных в виде XML и запрос данных, которые уже являются XML.
  #### Уроки
  - Введение в XML и XML-схемы
  - Хранение XML-данных и схем в SQL Server
  - Внедрение типа данных XML
  - Использование оператора Transact-SQL FOR XML
  - Начало работы с XQuery
  - Измельчение XML


  #### Лабораторная работа &#58; Хранение и запрос данных XML в SQL Server
  - Определение того, когда использовать XML
  - Тестирование хранения данных XML в переменных
  - Использование схем XML
  - Использование запросов FOR XML
  - Создание хранимой процедуры для возврата XML

  После завершения этого модуля вы сможете&#58; 
  Описать XML и XML-схемы.
  - Хранить данные XML и связанные схемы XML в SQL Server.
  - Внедрить XML-индексы в SQL Server.
  - Использовать инструкцию Transact-SQL FOR XML.
  - Работать с базовыми запросами XQuery.


  ### Модуль 15&#58; Хранение и запрос пространственных данных в SQL Server
  Этот модуль описывает пространственные данные и как эти данные могут быть реализованы в SQL Server.
  #### Уроки
  - Введение в пространственные данные
  - Работа с пространственными типами данных SQL Server
  - Использование пространственных данных в приложениях


  #### Лабораторная работа &#58; Работа с пространственными данными SQL Server
  - Ознакомиться с геометрическим типом данных
  - Добавить пространственные данные в существующую таблицу
  - Найти близлежащие места

  После завершения этого модуля вы сможете&#58; 
  - Описать, как пространственные данные могут храниться в SQL Server
  - Использовать базовые методы типов данных GEOMETRY и GEOGRAPHY
  - Использовать базы данных запросов, содержащие пространственные данные


  ### Модуль 16&#58; Хранение и запрос BLOB-объектов и текстовых документов в SQL Server
  Традиционно базы данных использовались для хранения информации в форме простых значений, таких как целые числа, даты и строки, которые контрастируют с более сложными форматами данных, такими как документы, электронные таблицы, файлы изображений и видеофайлы. Поскольку системы, поддерживаемые базами данных, стали более сложными, администраторы сочли необходимым объединить эти более сложные данные файла со структурированными данными в таблицах базы данных. Например, в базе данных продукта может быть полезно связать запись о продукте с инструкцией по обслуживанию или видео-инструкциями для этого продукта. SQL Server предоставляет несколько способов интеграции этих файлов, которые часто называют большими двоичными объектами (BLOB), и позволяет индексировать их содержимое и включать в результаты поиска. В этом модуле вы узнаете, как проектировать и оптимизировать базу данных, включающую BLOB.
  #### Уроки
  - Особенности данных BLOB
  - Работа с FILESTREAM
  - Использование полнотекстового поиска


  #### Лабораторная работа &#58; Хранение и запрос BLOB-объектов и текстовых документов в SQL Server
  - Включение и использование столбцов FILESTREAM
  - Включение и использование файловых таблиц
  - Использование полнотекстового индекса

  После завершения этого модуля вы сможете&#58; 
  - Описать соображения по проектированию баз данных, которые включают данные BLOB.
  - Описать преимущества и конструктивные особенности использования FILESTREAM для хранения BLOB-данных в файловой системе Windows.
  - Описать преимущества использования полнотекстовой индексации и семантического поиска и объясните, как использовать эти функции для поиска данных SQL Server, включая неструктурированные данные


  ### Модуль 17&#58; Согласованность SQL Server
  Этот модуль объясняет, как именовать, объявлять, присваивать значения и использовать переменные. Также в нем описано, как хранить данные в массиве.
  Управление параллелизмом - критическая особенность многопользовательских систем баз данных, оно позволяет данным оставаться согласованными, когда многие пользователи одновременно изменяют данные. Этот модуль охватывает реализацию параллелизма в Microsoft SQL Server. Вы узнаете о том, как SQL Server реализует элементы управления параллелизмом, а также о различных способах настройки и работы с параметрами параллелизма.

  #### Уроки
  - Параллельность и транзакции
  - Внутренние замки


  #### Лабораторная работа &#58; Согласованность SQL Server
  - Реализация изоляции моментального снимка
  - Реализация блокировки на уровне раздела

  После завершения этого модуля вы сможете&#58;
  - Описать параллелизм и транзакции в SQL Server.
  - Описать блокировку SQL Server.


  ### Модуль 18&#58; Производительность и мониторинг
  Этот модуль объясняет, как именовать, объявлять, присваивать значения и использовать переменные. Также в нем описано, как хранить данные в массиве.
  В этом модуле рассказывается о том, как измерять и отслеживать производительность ваших баз данных SQL Server. В первых двух уроках рассматриваются расширенные события SQL Server, гибкая и легкая система обработки событий, встроенная в ядро ​​базы данных Microsoft SQL Server. Эти уроки посвящены архитектурным концепциям, стратегиям устранения неполадок и сценариям использования.
  #### Уроки
  - Расширенные события
  - Работа с расширенными событиями
  - Статистика Live Query
  - Оптимизация конфигурации файла базы данных
  - Метрики


  #### Лабораторная работа &#58; Мониторинг, трассировка и определение базовых показателей
  - Сбор и анализ данных с использованием расширенных событий
  - Реализация базовой методологии

  После завершения этого модуля вы сможете&#58;
  - Понять расширенные события и как их использовать.
  - Работать с расширенными событиями.
  - Понять статистику Live Query.
  - Оптимизировать конфигурацию файлов ваших баз данных.
  - Использовать DMV и Performance Monitor для создания базовых показателей и сбора показателей производительности.

