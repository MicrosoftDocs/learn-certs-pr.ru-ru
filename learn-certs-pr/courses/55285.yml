### YamlMime:Course
title: Advanced Python
metadata:
  title: 'Course 55285-A: Advanced Python'
  description: 'Course 55285-A: Advanced Python'
uid: course.55285
courseNumber: '55285-A'
hoursToComplete: 48
iconUrl: /media/learn/certification/course.svg
skillsGained:
- skill: Работать с модулем коллекций.
- skill: Понимать сопоставление, фильтрацию и лямбда-функции.
- skill: Выполнять расширенную сортировку.
- skill: Работать с регулярными выражениями в Python.
- skill: Работать с базами данных, файлами CSV, JSON и XML.
- skill: Писать объектно-ориентированный код на Python.
- skill: Тестировать и отлаживать свой код на Python.
learningPartnersLink: /learn/certifications/partners
locales:
- en
levels:
- advanced
roles:
- developer
summary: |-
  Учащиеся этого обучающего курса по Python уже знакомы с программированием на Python и изучат продвинутые техники Python.
  Этот продвинутый курс по Python преподается с использованием Python 3, но отличия между Python 2 и Python 3 отмечаются. На индивидуальных занятиях по Python при необходимости инструктор может сфокусироваться на Python 2.

  #### Профиль аудитории
  Нет
prerequisitesSection: |-
  Для прохождения этого курса по Python требуется следующее&#58;
  - Базовый опыт программирования на Python. В частности, вы должны хорошо уметь делать следующее&#58;
      1. Работать со строками.
      2. Работать со списками, кортежами и словарями.
      3. Работать с циклами и условиями.
      4. Писать собственные функции.

  Для прохождения этого курса по Python полезно иметь&#58;
  - Некоторый опыт работы с HTML, XML, JSON и SQL.
outlineSection: |-
  ### Модуль 1&#58; продвинутые концепции Python
  В этом уроке вы узнаете о некоторых возможностях и техниках Python, которые используются часто, но для понимания которых требуется хорошее знание Python.

  #### Уроки
  - Лямбда-функции
  - Продвинутые списковые включения
  - Модуль коллекций
  - Сопоставление и фильтрация
  - Изменяемые и неизменяемые встроенные объекты
  - Сортировка
  - Распаковка последовательностей в вызовах функций


  #### Лабораторная работа &#58; упражнения в этом уроке
  - Бросание пяти костей
  - Создание defaultdict
  - Создание OrderedDict
  - Создание счетчика
  - Работа с деком
  - Конвертация list.sort() в sorted(iterable)
  - Конвертация строки в объект datetime.date

  После прохождения этого модуля учащиеся смогут&#58;
  - Работать с лямбда-функциями.
  - Работать с более продвинутыми списковыми включениями.
  - Работать с модулем коллекций для создания именованных кортежей, defaultdicts, ordereddicts, счетчиков и деков.
  - Использовать сопоставление и фильтрацию.
  - Сортировать последовательности.
  - Распаковывать последовательности в вызовах функций.
  - Создавать модули и пакеты.


  ### Модуль 2&#58; работа с данными
  Данные сортируются в различных местах и различными способами. Для всех наиболее распространенных способов существуют модули Python.

  #### Уроки
  - Реляционные базы данных
  - CSV
  - Получение данных из Интернета
  - JSON


  #### Лабораторная работа &#58; упражнения в этом уроке
  - Осуществление запроса к базе данных SQLite
  - Вставка данных файла в базу данных
  - Сравнение данных в файле CSV
  - Запросы и превосходный суп
  - Использование JSON для распечатки данных по курсу

  После прохождения этого модуля учащиеся будут/смогут&#58;
  - Получать доступ к данным, хранящимися в реляционной базе данных, и работать с ними.
  - Получать доступ к данным, хранящимся в CSV-файле, и работать с ними.
  - Получать данные с веб-страницы.
  - Получать доступ к данным, хранящимся как HTML и XML, и работать с ними.
  - Получать доступ к API.
  - Получать доступ к данным, хранящимся как JSON, и работать с ними.


  ### Модуль 3&#58; тестирование и отладка
  В этом модуле объясняется, как выполнять тестирование и отладку с помощью Python.
  #### Уроки
  - Тестирование производительности
  - Модуль unittest


  #### Лабораторная работа &#58; упражнения в этом уроке
  - Исправление функций

  После прохождения этого модуля учащиеся будут/смогут&#58;
  - Тестировать производительность с помощью таймеров и использования модуля timeit.
  - Писать модульные тесты с использованием модуля unittest.


  ### Модуль 4&#58; классы и объекты
  Объект — это что-то с атрибутами и/или поведением, а значит, это определенные способы, выполняющие определенные вещи. В реальном мире всё может считаться объектом. Некоторые объекты являются материальными, например, горы, деревья, теннисные ракетки и игроки в теннис. Другие объекты являются нематериальными, например, слова, цвета, удары в теннисе и теннисные матчи.

  #### Уроки
  - Атрибуты
  - Поведение
  - Классы и объекты
  - Атрибуты и методы
  - Личные атрибуты
  - Свойства
  - Документирование классов
  - Наследование
  - Статические методы
  - Атрибуты и методы класса
  - Абстрактные классы и методы
  - Понимание декораторов


  #### Лабораторная работа &#58; упражнения в этом уроке
  - Добавление метода roll() для игральной кости
  - Свойства
  - Документирование класса игральной кости
  - Расширение для класса игральной кости
  - Расширение метода roll()

  После прохождения этого модуля учащиеся смогут/будут&#58;
  - Создавать классы и объекты с помощью Python.
  - Писать методы экземпляра, методы класса и статические методы.
  - Определять свойства.
  - Создавать подклассы с использование наследования.
  - Создавать абстрактные классы.
  - Должным образом документировать классы Python.
  - Понимать, как работают декораторы.

  #### Дополнительные материалы
  Нет