### YamlMime:Course
title: Introduction to Programming Using Python
metadata:
  title: 'Course 55264-A: Introduction to Programming Using Python'
  description: 'Course 55264-A: Introduction to Programming Using Python'
uid: course.55264
courseNumber: '55264-A'
hoursToComplete: 120
iconUrl: /media/learn/certification/course.svg
skillsGained:
- skill: Создание операций с использованием типов данных и операторов
- skill: Создание операций потока управления
- skill: Создание операций ввода и вывода
- skill: Написать и документировать код для решения указанной проблемы
- skill: Устранение неполадок и запись операций по обработке ошибок
- skill: Выполнять операции с использованием модулей и инструментов
learningPartnersLink: /learn/certifications/partners
locales:
- en
levels:
- beginner
roles:
- developer
products:
- vs
exams:
- uid: exam.98-381
summary: |-
  Этот пятидневный курс под руководством инструктора предназначен для студентов, которые хотят научиться писать код Python, который логически решает данную проблему. Кандидаты научатся писать, отлаживать, поддерживать и документировать код Python. Материал подготовит студентов к сертификационному экзамену Microsoft 98-381.

  #### Профиль аудитории
  Этот курс предназначен для начинающих и опытных программистов, которые хотят научиться писать и устранять неполадки в коде Python. Это рекомендуемый Microsoft курс подготовки к тесту 98-381. Предыдущий опыт программирования не требуется, но рекомендуется.
prerequisitesSection: |-
  Перед посещением этого курса студенты должны иметь&#58;
  - Опыт выполнения операций командной строки на компьютерах с Windows, Linux или Mac
  - Шесть месяцев опыта написания кода на любом языке программирования (рекомендуется)
outlineSection: |-
  ### Модуль 1&#58; Выполнение операций с использованием типов данных и операторов
  В этом модуле объясняется, как использовать операторы Python и типы данных для достижения определенного результата.
  #### Уроки
  - Назначение типов данных переменным
  - Выполнение операций с данными и типам данных
  - Выполнение арифметических, сравнительных и логических операций
  - Пересмотр


  #### Лабораторная работа&#58; выполнение операций с использованием типов данных и операторов
  - Назначение типов данных переменным
  - Выполнение операций с данными и типам данных
  - Выполнение арифметических, сравнительных и логических операций

  После завершения этого модуля студенты смогут следующее&#58;
  - Назначение типов данных переменным
  - Управление данными и типами данных операций
  - Выполнение арифметических, сравнительных и логических операций


  ### Модуль 2&#58; Поток управления с решениями и циклами
  Этот модуль объясняет, как использовать поток управления (Control Flow) и цикла (Looping) в Python.
  #### Уроки
  - Построение и анализ сегментов кода, которые используют операторы ветвления
  - Построение и анализ сегментов кода, которые выполняют итерации
  - Пересмотр


  #### Лабораторная работа&#58; поток управления с решениями и циклами
  - Использование операций ветвления
  - Использование итерационных операций

  После завершения этого модуля студенты смогут следующее&#58;
  - Создавать операции ветвления
  - Создавать итерационные операции


  ### Модуль 3&#58; Выполнение операций ввода и вывода
  Этот модуль объясняет, как создавать операции ввода и вывода с помощью файлов или из консоли.
  #### Уроки
  - Создание сегментов кода Python, которые выполняют операции ввода и вывода файлов
  - Создание сегментов кода Python, которые выполняют операции ввода и вывода с консоли
  - Пересмотр


  #### Лабораторная работа&#58; выполнение операций ввода и вывода
  - Выполнение операции ввода и вывода с использованием файлов
  - Выполнение операции ввода и вывода из консоли

  После завершения этого модуля студенты смогут следующее&#58;
  - Использовать файлы для операций ввода и вывода
  - Использовать консоль для выполнения операций ввода и вывода.


  ### Модуль 4&#58; Документирование и структурирование кода
  Этот модуль объясняет, как структурировать и документировать хорошо написанный код Python.
  #### Уроки
  - Построение и анализ сегментов кода
  - Документирование сегментов кода, использующие комментарии и строки документации
  - Пересмотр


  #### Лабораторная работа&#58; документирование и структурирование кода
  - Построение и анализ сегментов кода
  - Документирование сегментов кода

  После завершения этого модуля студенты смогут следующее&#58;
  - Создание сегментов кода
  - Документирование сегментов кода


  ### Модуль 5&#58; Выполнение поиска неисправностей и обработки ошибок
  В этом модуле объясняется, как выполнять операции устранения неполадок и обработки ошибок в Python.
  #### Уроки
  - Анализ, выявление и исправление сегментов кода, содержащих ошибки
  - Анализ и конструирование сегментов кода, которые обрабатывают исключительные ситуации
  - Пересмотр


  #### Лабораторная работа&#58; выполнение устранения неполадок и обработка ошибок
  - Анализ, выявление и исправление сегментов кода, содержащих ошибки
  - Анализ и конструирование сегментов кода, которые обрабатывают исключительные ситуации

  После завершения этого модуля студенты смогут следующее&#58;
  - Обнаруживать и исправлять ошибки в коде
  - Создавать код обработки ошибок


  ### Модуль 6&#58; Выполнение операций с использованием модулей и инструментов
  Этот модуль объясняет, как использовать встроенные модули.
  #### Уроки
  - Использование встроенных модулей для выполнения основных операций
  - Использование встроенных модули для выполнения сложных операций
  - Пересмотр


  #### Лабораторная работа&#58; выполнение операций с использованием модулей и инструментов
  - Использование встроенных модулей для выполнения основных операций
  - Использование встроенных модули для выполнения сложных операций

  После завершения этого модуля студенты смогут следующее&#58;
  - Использовать встроенные модули для выполнения операционной системы, даты и математических операций

  #### Дополнительное чтение 
  Чтобы помочь вам подготовиться к этому уроку, просмотрите следующие ресурсы&#58;
  - Цели теста Microsoft для экзамена 98-381

