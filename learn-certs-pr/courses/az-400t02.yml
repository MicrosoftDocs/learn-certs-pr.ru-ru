### YamlMime:Course
title: Implementing Continuous Integration
metadata:
  title: 'Course AZ-400T02-A: Implementing Continuous Integration'
  description: 'Course AZ-400T02-A: Implementing Continuous Integration'
uid: course.az-400t02
courseNumber: 'AZ-400T02-A'
hoursToComplete: 24
iconUrl: /media/learn/certification/course.svg
skillsGained:
- skill: Умение объяснить необходимость непрерывной интеграции
- skill: Внедрение непрерывной интеграции с помощью Azure DevOps
- skill: Настройка сборок и доступных опций
- skill: Создание автоматизированного рабочего процесса сборки
- skill: Интеграция других инструментов сборки с помощью Azure DevOps
- skill: Создание гибридных процессов сборки
- skill: Описание того, что подразумевается под качеством кода и как оно измеряется
- skill: Определение явных проблем в структуре кода
- skill: Интегрирование автоматизированных тестов для проверки качества кода
- skill: Отправка отчетов о покрытии кода во время тестирования
- skill: Добавление инструментов для оценки технических недоработок
- skill: Обнаружение открытого исходного кода и других проблем с лицензированием
- skill: Внедрение стратегии построения контейнера
learningPartnersLink: /learn/certifications/partners
locales:
- en
levels:
- advanced
roles:
- devops-engineer
products:
- azure
- azure-devops
- azure-kubernetes-service
- azure-container-instances
- azure-automation
exams:
- uid: exam.az-400
summary: |-
  В этом курсе слушатели приобретают знания и навыки, необходимые для реализации практики непрерывной интеграции DevOps. Они учатся реализовывать непрерывную интеграцию в конвейере Azure DevOps, управлять качеством кода и принципами безопасности, а также внедрять стратегию сборки контейнера.

  #### Профиль аудитории
  Этот курс предназначен для слушателей, заинтересованных в непрерывной интеграции DevOps или в прохождении сертификационного экзамена Microsoft Azure DevOps Solutions.
prerequisitesSection: |-
  - Для прохождения данного курса слушатели должны обладать фундаментальными знаниями о Azure, управлении версиями, разработке программного обеспечения Agile и основных принципах разработки программного обеспечения. Опыт в организации, которая поставляет программное обеспечение, был бы желателен.
  - Рекомендуется иметь опыт работы в IDE, а также иметь некоторое понимание портала Azure. Тем не менее, слушатели, которые могут не обладать опытом работы с этими технологиями, но которые интересуются практикой DevOps как культурным сдвигом, должны иметь возможность следовать процедурным и пояснительным объяснениям непрерывной интеграции независимо от этого.
outlineSection: |-
  ### Модуль 1&#58; Реализация непрерывной интеграции в конвейере DevOps Azure
  В этом модуле изложены принципы непрерывной интеграции, в том числе&#58; преимущества, проблемы, рекомендациями по созданию и этапами внедрения. Вы также узнаете о реализации стратегии сборки с помощью рабочих процессов, триггеров, агентов и инструментов.
  #### Уроки
  - Обзор непрерывной интеграции
  - Реализация стратегии сборки


  #### Лабораторная работа&#58; Включение непрерывной интеграции с конвейерами Azure

  #### Лабораторная работа&#58; Создание Jenkins Build Job и Triggering CI
  После завершения этого модуля студенты получат следующее&#58;
  - Объяснить почему непрерывная интеграция имеет значение
  - Внедрять непрерывную интеграцию с помощью Azure DevOps


  ### Модуль 2&#58; Управление качеством кода и политиками безопасности
  В этом модуле рассказывается, как управлять качеством кода, в том числе&#58; техническими долгами, SonarCloud и другими инструментальными решениями. Также содержится информация, как управлять политиками безопасности с открытым исходным кодом, OWASP и WhiteSource Bolt.
  #### Уроки
  - Управление качеством кода
  - Управление политиками безопасности


  #### Лабораторная работа&#58; Управление техническим долгом с помощью Azure DevOps и SonarCloud

  #### Лабораторная работа&#58; Проверка уязвимостей с помощью WhiteSource Bolt и Azure DevOps
  После завершения этого модуля студенты получат следующее&#58;
  - Управлять качеством кода, включая&#58; технические долги, SonarCloud и другие инструментальные решения.
  - Управлять политиками безопасности с открытым исходным кодом, OWASP и WhiteSource Bolt.
  - Управлять качеством кода, включая&#58; технические долги, SonarCloud и другие инструментальные решения.


  ### Модуль 3&#58; Реализация стратегии построения контейнера
  Этот модуль поможет обрести знания и навыки, необходимые для реализации стратегии контейнеров, включая то, как контейнеры отличаются от виртуальных машин и как микросервисы используют контейнеры. Также рассказывается, как реализовать контейнеры с помощью Docker.
  #### Уроки
  - Реализация стратегии сборки контейнера


  #### Лабораторная работа&#58; Существующие приложения .NET с изображениями Azure и Docker
  После завершения этого модуля студенты получат следующее&#58;
  - Реализовывать контейнерную стратегию, включая то, как контейнеры отличаются от виртуальных машин и как микросервисы используют контейнеры.
  - Реализация контейнеров с использованием Docker.

