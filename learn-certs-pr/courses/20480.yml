### YamlMime:Course
title: Programming in HTML5 with JavaScript and CSS3
metadata:
  title: 'Course 20480-C: Programming in HTML5 with JavaScript and CSS3'
  description: 'Course 20480-C: Programming in HTML5 with JavaScript and CSS3'
uid: course.20480
courseNumber: '20480-C'
hoursToComplete: 120
iconUrl: /media/learn/certification/course.svg
skillsGained:
- skill: Понимание использования Visual Studio 2017 для создания и запуска веб-приложений.
- skill: Способность описать новые возможности HTML5, а также создавать и стилизовать страницы HTML5.
- skill: Добавление интерактивности на страницы HTML5 с помощью JavaScript.
- skill: Создание формы HTML5 с использованием различных типов ввода, проверка пользовательского ввода с помощью атрибутов HTML5 и кода JavaScript.
- skill: Получение данных в удаленный источник и их отправка из него с использованием объектов запросов XMLHTTP и Fetch API.
- skill: Стилизация страниц HTML5 с помощью CSS3.
- skill: Создание хорошо структурированного и легко поддерживаемого кода JavaScript.
- skill: Написание современного кода JavaScript и использование babel, чтобы сделать его совместимым со всеми браузерами.
- skill: Использование общих API HTML5 в интерактивных веб-приложениях.
- skill: Создание веб-приложений, поддерживающих автономные операции.
- skill: Создание веб-страниц HTML5, которые можно адаптировать к различным устройствам и формирующим факторам.
- skill: Добавление расширенной графики на страницу HTML5 с помощью элементов Canvas, а также с помощью Scalable Vector Graphics.
- skill: Повышение удобства использования с помощью добавления анимации на страницу HTML5.
- skill: Использование веб-сокетов для отправки и получения данных между веб-приложением и сервером.
- skill: Повышение скорости отклика веб-приложения, выполняющего длительные операции, с помощью процессов Web Worker.
- skill: Использование WebPack для упаковки веб-приложений для производства.
learningPartnersLink: https://www.microsoft.com/learning/partners.aspx
locales:
- en
levels:
- intermediate
roles:
- developer
products:
- vs
exams:
- uid: exam.70-480
summary: |-
  Этот курс представляет собой введение в HTML5, CSS3 и JavaScript. Этот курс помогает студентам получить базовые навыки программирования на HTML5/CSS3/JavaScript. Этот курс является отправной точкой для обучения как веб-приложениям, так и приложениям Windows Store. Курс направлен на использование HTML5/CSS3/JavaScript для реализации логики программирования, определения и использования переменных, выполнения циклов и ветвлений, разработки пользовательских интерфейсов, сбора и проверки ввода данных пользователем, хранения данных и создания хорошо структурированного приложения. Лабораторные сценарии в этом курсе выбраны для поддержки и демонстрации структуры различных прикладных сценариев. Они предназначены для того, чтобы сосредоточиться на принципах, компонентах и структурах кодирования, которые используются для создания программного приложения HTML5. В этом курсе используется продукт Visual Studio 2017, работающий на Windows 10.

  #### Профиль аудитории
  Этот курс предназначен для профессиональных разработчиков, которые имеют опыт программирования от 6 до 12 месяцев и заинтересованы в разработке приложений с использованием HTML5 с JavaScript и CSS3 (либо приложений Windows Store для Windows 10 или веб-приложений).
prerequisitesSection: |-
  - 1-3 месяца опыта создания веб-приложений, включая написание простого кода JavaScript
  - 1 месяц опыта создания клиентских приложений Windows
  - 1 месяц опыта использования Visual Studio 2017
outlineSection: |-
  ### Модуль 1&#58; Обзор HTML и CSS
  Большинство современных веб-приложений построены на основе HTML-страниц, которые описывают содержимое, которое пользователи просматривают и с которым взаимодействуют, таблицы стилей, делающих это содержимое визуально приятным, а также код JavaScript для обеспечения соответствующего уровня интерактивности между пользователем и страницей, а также страницей и сервером. Веб-браузер использует HTML-разметку и таблицы стилей для визуализации этого содержимого и запускает код JavaScript для реализации поведения приложения. В этом модуле рассматриваются основы HTML и CSS, а также представлены инструменты, используемые в этом курсе для создания HTML-страниц и таблиц стилей.
  #### Уроки
  - Обзор HTML
  - Обзор CSS
  - Создание веб-приложения с помощью Visual Studio 2017


  #### Лабораторная работа &#58;Изучение приложения для конференций Contoso
  - Изучение приложения для конференций Contoso
  - Изучение и изменение приложения Contoso Conference

  После завершения этого модуля студенты получат следующее&#58;
  - Объяснить, как использовать HTML-элементы и атрибуты для разметки веб-страницы.
  - Объяснить, как использовать CSS для применения основных стилей к веб-странице.
  - Описать инструменты, которые Microsoft Visual Studio предоставляет для создания веб-приложений.


  ### Модуль 2&#58; Создание и стилизация HTML-страниц
  Технологии, лежащие в основе всех веб-приложений HTML, CSS и JavaScript, были доступны в течение многих лет, но цель и сложность веб-приложений значительно изменились. HTML5 является первой крупной версией HTML за последние 10 лет, предоставляющей весьма подходящие средства отображения содержимого для традиционных веб-приложений, приложений работающих на портативных мобильных устройствах, а также на платформе Windows 10. Этот модуль знакомит с HTML5, описывает его новые функции, демонстрирует, как представлять содержимое с помощью новых функций в HTML5, и как стилизовать это содержимое с помощью CSS.
  #### Уроки
  - Создание страницы HTML5
  - Стилизация страницы HTML5


  #### Лабораторная работа &#58; Создание и стилизация страниц HTML5
  - Создание страниц HTML5
  - Стилизация HTML-страниц

  После завершения этого модуля студенты получат следующее&#58;
  - Описание назначения и новых функций HTML5 и объяснение того, как использовать новые элементы HTML5 для разметки веб-страницы.
  - Объяснить, как использовать CSS для стилизации макета, текста и фона веб-страницы.


  ### Модуль 3&#58; Введение в JavaScript
  HTML и CSS предоставляют структурную, семантическую и презентационную информацию для веб-страницы. Однако эти технологии не описывают, как пользователь взаимодействует со страницей с помощью браузера. Для реализации этой функциональности все современные браузеры включают движок JavaScript для поддержки использования скриптов на странице. Они также реализуют Document Object Model (DOM), стандарт W3C, который определяет то, как браузер должен отображать страницу в памяти, чтобы дать возможность механизмам сценариев получать доступ и изменять содержимое этой страницы. Этот модуль знакомит с программированием на JavaScript и с DOM.
  #### Уроки
  - Обзор JavaScript
  - Введение в объектную модель документа


  #### Лабораторная работа &#58; Отображение данных и обработка событий с помощью JavaScript.
  - Программное отображение данных
  - Обработка событий

  После завершения этого модуля студенты получат следующее&#58;
  - Описать основной синтаксис JavaScript.
  - Написать код JavaScript, который использует DOM для изменения и получения информации с веб-страницы.


  ### Модуль 4&#58; Создание форм для сбора и проверки ввода пользователя
  Для выполнения своих задач, веб-приложениям часто нужно собирать данные, вводимые пользователем. Веб-страница должна четко и кратко информировать о данных, ввод которых ожидается от пользователя, чтобы минимизировать недоразумения относительно информации, которую должен предоставить пользователь. Кроме того, все входные данные должны быть проверены, чтобы убедиться, что они соответствуют требованиям приложения. В этом модуле вы узнаете, как определять формы ввода, используя новые типы ввода, доступные в HTML5. Вы также увидите, как проверять данные с помощью атрибутов HTML5. Наконец, вы узнаете, как выполнять расширенную проверку ввода с помощью кода JavaScript и как осуществлять обратную связь пользователями, если они вводят недопустимые данные, не соответствующие ожиданиям приложений.
  #### Уроки
  - Создание форм HTML5
  - Проверка пользовательского ввода с использованием атрибутов HTML5
  - Проверка пользовательского ввода с помощью JavaScript


  #### Лабораторная работа &#58; Создание формы ввода и проверка пользовательского ввода
  - Создание формы и проверка пользовательского ввода с использованием атрибутов HTML5
  - Проверка пользовательского ввода с помощью JavaScript

  После завершения этого модуля студенты получат следующее&#58;
  - Создание форм ввода с использованием HTML5.
  - Использование атрибутов формы HTML5 для проверки данных.
  - Написание кода JavaScript для выполнения задач проверки, которые невозможно легко реализовать с использованием атрибутов HTML5.


  ### Модуль 5&#58; Связь с удаленным сервером
  Многие веб-приложения требуют использования данных, хранящихся на удаленном сайте. В некоторых случаях вы можете получить доступ к этим данным, просто загрузив их с указанного URL, но в других случаях данные инкапсулируются удаленным сайтом и становятся доступными через веб-службу. В этом модуле вы узнаете, как получить доступ к сетевой службе с помощью кода JavaScript и включить удаленные данные в свои веб-приложения. Вы посмотрите на две технологии для достижения этой цели; объект XMLHttpRequest, который действует как программная оболочка вокруг HTTP-запросов к удаленным веб-сайтам, и Fetch API, упрощающее многие задачи, связанные с отправкой запросов и получением данных. Поскольку Fetch API и объект XMLHttpRequest являются асинхронными API, вы сначала узнаете, как обрабатывать асинхронные задачи с помощью объекта Promise, функций стрелок и нового синтаксиса async/await, позволяющего обрабатывать асинхронные запросы так, как если бы они были синхронными.
  #### Уроки
  - Асинхронное программирование на JavaScript
  - Отправка и получение данных с использованием объекта XMLHttpRequest
  - Отправка и получение данных с использованием Fetch API


  #### Лабораторная работа &#58; Связь с удаленным источником данных
  - Извлечение данных
  - Сериализация и передача данных
  - Рефакторинг кода с использованием метода jQuery ajax

  После завершения этого модуля студенты получат следующее&#58;
  - Обработка асинхронных задач JavaScript с использованием новых технологий асинхронного программирования.
  - Отправка данных в веб-службу и получение данных из веб-службы с использованием объекта XMLHttpRequest.
  - Отправка данных в веб-службу и получение данных из веб-службы с помощью API Fetch.


  ### Модуль 6&#58; Стилизация HTML5 с помощью CSS3
  Стилизация содержимого, отображаемого на веб-странице, является важным аспектом, делающим приложение привлекательным и простым в использовании. CSS является основным механизмом, который веб-приложения используют для стилизации, а функции, добавленные в CSS3, поддерживают многие из новых возможностей, имеющихся в современных браузерах. В тех случаях, когда CSS1 и CSS2.1 были отдельными документами, Консорциум World Wide Web решил записать CSS3 в виде набора модулей, каждый из которых сосредоточен на одном аспекте представления, таком как цвет, текст, блочная модель и анимация. Это позволяет данным спецификациям развиваться постепенно, вместе с их реализациями. Каждая спецификация определяет свойства и значения, которые уже существуют в CSS1 и CSS2, а также новые свойства и значения. В этом модуле вы изучите свойства и значения, определенные в нескольких из этих модулей, новые селекторы, определенные в CSS3, и использование псевдоклассов и псевдоэлементов для уточнения этих выборов.
  #### Уроки
  - Стилизация текста с использованием CSS3
  - Стилизация блочных элементов
  - псевдоклассы и псевдоэлементы
  - Улучшение графических эффектов с помощью CSS3


  #### Лабораторная работа &#58; Стилизация текста и блочных элементов с помощью CSS3
  - Стилизация панели навигации
  - Стилизация регистрационной ссылки
  - Стилизация страницы «О нас»

  После завершения этого модуля студенты получат следующее&#58;
  - Использование новых возможностей CSS3 для стилизации текстовых элементов.
  - Использование новые возможностей CSS3 для стилизации блочных элементов.
  - Использование CSS3 селекторов, псевдоклассов и псевдоэлементов, чтобы уточнить стилизацию элементов.
  - Улучшение страниц с помощью графических эффектов CSS3.


  ### Модуль 7&#58; Создание объектов и методов с использованием JavaScript
  Повторное использование кода и простота обслуживания являются ключевыми целями написания хорошо структурированных приложений. Если вы сможете достичь этих целей, то сократите расходы, связанные с написанием и обслуживанием вашего кода. В этом модуле описывается, как писать хорошо структурированный код JavaScript с использованием таких языковых функций, как пространства имен, объекты, инкапсуляция и наследование. Эти концепции могут показаться вам знакомыми, если у вас есть опыт работы с такими языками, как Java или C#, но подход JavaScript совсем другой, и есть много тонкостей, которые вы должны понять, если хотите написать поддерживаемый код.
  #### Уроки
  - Написание хорошо структурированного кода JavaScript
  - Создание пользовательских объектов
  - Расширение объектов


  #### Лабораторная работа &#58; Уточнение кода для ремонтопригодности и расширяемости
  - Наследование объектов
  - Рефакторинг кода JavaScript для использования объектов

  Пройдя этот модуль, студенты смогут&#58;
  - Писать хорошо структурированный код JavaScript.
  - Использовать код JavaScript для создания пользовательских объектов.
  - Реализовать объектно-ориентированные методы с использованием идиом JavaScript.


  ### Модуль 8&#58; Создание интерактивных страниц с использованием API HTML5
  Интерактивность - ключевой аспект современных веб-приложений, позволяющий создавать привлекательные веб-сайты, которые могут быстро реагировать на действия пользователя, а также адаптироваться к его местоположению. Этот модуль описывает, как создавать интерактивные веб-приложения HTML5, которые могут получить доступ к локальной файловой системе, дать возможность пользователю перетаскивать данные на элементы веб-страницы, воспроизводить мультимедийные файлы и получать информацию о геолокации.
  #### Уроки
  - Взаимодействие с файлами
  - Включение мультимедиа
  - Реагирование на местоположение и контекст браузера
  - Отладка и профилирование веб-приложения


  #### Лабораторная работа &#58; Создание интерактивных страниц с помощью HTML5 AP
  - Перетаскивание изображений
  - Включение видео
  - Использование API Geolocation для сообщения о текущем местоположении пользователя

  После завершения этого модуля студенты получат следующее&#58;
  - Доступ к локальной файловой системе и добавление поддержки перетаскивания на веб-страницах.
  - Воспроизведение видео и аудио файлов на веб-странице, без необходимости плагинов. Получение информации о текущем местонахождении пользователя.
  - Использование средств разработчика F12 в Microsoft Edge для отладки и профилирования веб-приложения.


  ### Модуль 9&#58; Добавление автономной поддержки веб-приложений
  Веб-приложения зависят от возможности подключения к сети для получения веб-страниц и данных. Однако в некоторых средах сетевое соединение может прерываться. В этих ситуациях может быть полезно разрешить приложению продолжать работу с использованием данных, кэшированных на устройстве пользователя. HTML5 предоставляет выбор новых вариантов хранения на стороне клиента, включая хранилище сеансов и локальное хранилище, а также механизм кэширования ресурсов, называемый кешем приложений. В этом модуле вы узнаете, как использовать эти технологии для создания надежных веб-приложений, которые могут продолжать работать, даже если сетевое соединение недоступно.
  #### Уроки
  - Локальное чтение и запись данных
  - Добавление поддержки автономности с использованием кэша приложений


  #### Лабораторная работа &#58; Добавление поддержки автономности веб-приложений
  - Кэширование автономных данных с помощью API-интерфейса кеша приложений
  - Сохранение пользовательских данных с помощью API локального хранилища

  После завершения этого модуля студенты получат следующее&#58;
  - Сохранение данные локально на устройстве пользователя и получение доступа к этим данным из веб-приложения.
  - Настрока веб-приложения для поддержки автономных операций с помощью кэша приложений.


  ### Модуль 10&#58; Реализация адаптивного пользовательского интерфейса
  Одной из самых устойчивых особенностей Интернета является его временный характер. Монополия на клавиатуру и мышь подвергается сомнению, и это означает, что нужно задавать вопросы о том, как спроектированы пользовательские интерфейсы. Вы можете разрабатывать веб-приложение на компьютере с большим монитором высокого разрешения, мышью и клавиатурой, но другие пользователи могут просматривать ваше приложение и взаимодействовать с ним на смартфоне или планшете без мыши или иметь монитор с другим разрешением. Пользователи также могут захотеть распечатать страницы вашего приложения. В этом модуле вы узнаете, как создать веб-сайт, который адаптирует макет и функциональность своих страниц к возможностям и форм-фактору устройства, на котором он просматривается. Вы узнаете, как определить тип устройства, используемого для просмотра страницы, и узнаете стратегии размещения содержимого, который эффективно ориентирован на конкретные устройства.
  #### Уроки
  - Поддержка нескольких формирующих факторов
  - Создание адаптивного пользовательского интерфейса


  #### Лабораторная работа &#58; Реализация адаптивного пользовательского интерфейса
  - Создание таблицы стилей, удобной для печати
  - Адаптация макета страницы для соответствия различным формирующим факторам

  После завершения этого модуля студенты получат следующее&#58;
  - Описание требований к сайту для реагирования на различные форм-факторы.
  - Создание веб-страниц, которые могут адаптировать свой макет в соответствии с форм-фактором устройства, на котором они отображаются.


  ### Модуль 11&#58; Создание продвинутой графики
  Интерактивная графика высокого разрешения является ключевой частью большинства современных приложений. Графика может помочь улучшить взаимодействие с пользователем, отображая визуальный аспект содержимого, делая веб-сайт более привлекательным и простым в использовании. Интерактивность позволяет графическим элементам веб-сайта адаптироваться и реагировать на ввод пользователя или изменения в среде, а также является другим важным элементом в удержании внимания пользователя и его интереса к содержимому.

  В этом модуле описывается, как создавать расширенную графику в HTML5 с использованием масштабируемой векторной графики (SVG) и Microsoft Canvas API. Вы узнаете, как использовать элементы, связанные с SVG, и отображать графическое содержимое на веб-странице. Вы также узнаете, как дать пользователю возможность взаимодействовать с элементами SVG с помощью таких событий, как команды с клавиатуры и мыши.

  Canvas API несколько отличается от SVG. Canvas API предоставляет элемент и набор функций JavaScript, которые можно вызывать для рисования графики на поверхности холста. Вы узнаете, как использовать Canvas API, а также узнаете, когда более целесообразно использовать Canvas или SVG.
  #### Уроки
  - Создание интерактивной графики с использованием SVG
  - Рисование графики с помощью Canvas API


  #### Лабораторная работа &#58; Создание продвинутой графики
  - Создание интерактивной карты объекта с помощью SVG
  - Создание значка динамика с помощью Canvas API

  После завершения этого модуля студенты получат следующее&#58;
  - Использование SVG для создания интерактивного графического содержимого.
  - Использование Canvas API для программного создания графического содержимого.


  ### Модуль 12&#58; Анимация пользовательского интерфейса
  Анимация является ключевым элементом поддержания интереса пользователя к веб-сайту. Тщательно реализованная анимация улучшает удобство использования веб-страницы и обеспечивают полезную визуальную обратную связь с действиями пользователя.

  Этот модуль описывает, как улучшить веб-страницы с помощью CSS-анимации. Вы узнаете, как применять переходы к значениям свойств. Переходы позволяют указать временные рамки изменения свойств. Например, вы можете указать, что когда курсор мыши находится над элементом, то он должен изменять свою ширину и высоту в течение пяти секунд. Далее вы узнаете, как применять 2D и 3D преобразования к элементам. Преобразования позволяют масштабировать, переводить, вращать и наклонять элементы. Вы также можете применять переходы к преобразованиям, чтобы преобразование применялось постепенно в течение указанного периода анимации.

  В конце этого модуля вы узнаете, как применять анимацию ключевых кадров к элементам. Анимация по ключевым кадрам позволяет вам определять набор значений свойств в определенные моменты анимации. Например, вы можете указать цвет и положение элемента в 0 процентов, 33 процента, 66 процентов и 100 процентов периода анимации.
  #### Уроки
  - Применение CSS переходов
  - Трансформация элементов
  - Применение ключевой анимации CSS


  #### Лабораторная работа &#58; Анимация пользовательского интерфейса
  - Применение CSS переходов
  - Применение анимации ключевых кадров

  После завершения этого модуля студенты получат следующее&#58;
  - Применение переходов для анимации значений свойств к элементам HTML.
  - Применение 2D и 3D преобразований к элементам HTML.
  - Применение анимации ключевых кадров к элементам HTML.


  ### Модуль 13&#58; Реализация связи в реальном времени с помощью веб-сокетов
  Веб-страницы запрашивают с веб-сервера данные по требованию, отправляя HTTP-запросы. Эта модель идеально подходит для создания интерактивных приложений, в которых функциональность определяется действиями пользователя. Однако для приложений, которые должны отображать постоянно меняющуюся информацию, этот механизм подходит меньше. Например, страница с биржевыми акциями бесполезна, если она показывает цены, которые устарели всего на несколько минут, и вы не можете ожидать, что пользователь будет постоянно обновлять страницу, отображаемую в браузере. Здесь полезны веб-сокеты. Web Sockets API предоставляет механизм для осуществления двусторонней связи между веб-сервером и браузером в режиме реального времени.

  Этот модуль знакомит с веб-сокетами, описывает их работу и объясняет, как создать соединение с веб-сокетами, которое можно использовать для передачи данных в режиме реального времени между веб-страницей и веб-сервером.
  #### Уроки
  - Введение в веб-сокеты
  - Использование WebSocket API


  #### Лабораторная работа &#58; Связь в реальном времени с использованием веб-сокетов
  - Получение сообщений из веб-сокета
  - Отправка сообщений в веб-сокет
  - Обработка различных типов сообщений веб-сокетов

  После завершения этого модуля студенты получат следующее&#58;
  - Понимание того, как использование веб-сокетов помогает обеспечить связь в режиме реального времени между веб-страницей и веб-сервером.
  - Использование API веб-сокетов для подключения к веб-серверу с веб-страницы и обмена сообщениями между веб-страницей и веб-сервером.


  ### Модуль 14&#58; Выполнение фоновой обработки с использованием сетевых работников Web Workers
  Код JavaScript - это мощный инструмент для реализации функционала веб-страницы, но вы должны помнить, что этот код запускается либо при загрузке веб-страницы, либо в ответ на действия пользователя во время ее отображения. Код запускается браузером, и если код выполняет операции, занимающие значительное время, браузер может перестать отвечать на запросы и ухудшить работу пользователя.

  В HTML5 имеются сетевые работники, которые позволяют разгрузить обработку в отдельные фоновые потоки и, таким образом, позволяют браузеру оставаться отзывчивым. Этот модуль описывает, как работают сетевые работники и как вы можете использовать их в своих веб-приложениях.
  #### Уроки
  - Понимание сетевых работников
  - Выполнение асинхронной обработки с использованием сетевых работников


  #### Лабораторная работа &#58; Создание процессов для сетевых работников
  - Повышение отзывчивости с помощью сетевого работника

  После завершения этого модуля студенты получат следующее&#58;
  - Понимание, как сетевые работники могут быть использованы для реализации многопоточности и улучшения отзывчивости веб-приложения.
  - Выполнение обработки с помощью сетевого работника, связь с работником и управление работником.


  ### Модуль 15&#58; Упаковка JavaScript для развертывания производства
  Использование моделей позволяет создавать большие и сложные приложения. Прогресс этого языка в версии ECMAScript6 позволяет дособрать приложение, чтобы упростить процесс создания приложения.
  Однако использование модулей ECMAScript6 и других функций пока поддерживается не во всех браузерах. Такие инструменты, как Node.js, Webpack и Babel, позволяют использовать новые языковые функции наряду с поддержкой различных браузеров, чтобы избежать нанесения ущерба пользовательскому интерфейсу.

  В этом модуле мы представим теорию, лежащую в основе этих инструментов, расскажем, когда нам нужно их использовать, и опишем различные варианты их использования. В конце модуля мы увидим, как использовать эти инструменты для написания кода ECMAScript6, поддерживаемого во всех браузерах.
  #### Уроки
  - Понимание транспортеров и комплектации модулей
  - Создание отдельных пакетов для кросс-браузерной поддержки


  #### Лабораторная работа &#58; Настройка пакета Webpack для производства
  - Создание и развертывание пакетов с использованием WebPack

